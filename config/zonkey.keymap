#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>
#include <physical_layouts.dtsi>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100


#define DFb 0
#define JIS 1
#define BT 4
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
         mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp LS(N6)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp LS(SQT)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LS(N8)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mo0: mo0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp LS(N9)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moA: moA {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp LS(INT_RO)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moB: moB {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(MINUS)>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moC: moC {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp LS(RBRC)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moD: moD {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSLH>, <&kp LS(BSLH)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moE: moE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp SQT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moF: moF {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(N7)>, <&kp LS(N2)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moG: moG {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(LBRC)>, <&kp LS(EQUAL)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        moH: moH {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(LBRC)>, <&kp LS(EQUAL)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
         moI: moI {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LS(LBRC)>, <&kp LS(EQUAL)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
          scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W      &kp E         &kp R            &kp T                                             &kp Y        &kp U      &kp I     &kp O    &kp P
&kp A           &kp S         &kp D         &kp F             &kp G        &kp LS(LG(S))          &kp MINUS       &kp H          &kp J        &kp K      &kp L   &kp SQT
&kp LEFT_SHIFT  &kp Z         &kp X        &kp C             &kp V        &kp B                &kp SEMICOLON     &kp N          &kp M        &kp COMMA   &kp DOT  &kp SLASH
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 INT_HENKAN  &lt 2 SPACE  &lt 1 INT_MUHENKAN                    &kp BACKSPACE    &kp ENTER                        &kp DEL
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&trans         &trans         &trans        &trans          &trans                                                               &trans         &trans        &moA          &moB          &moC
&trans      &trans         &trans        &trans          &trans          &trans                                &trans         &trans         &trans         &trans         &moD         &moE
&trans         &trans         &trans       &trans          &trans          &trans                                &trans         &trans         &trans         &moF         &moG         &moH
&mt LCTL ESC      &trans         &trans        &lt 5 INT_HENKAN    &lt 4 SPACE   &lt 1 INT_MUHENKAN                  &trans         &trans                                              &moI
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
 &trans         &trans        &trans          &trans          &trans                                                         &trans         &trans        &trans          &trans          &trans
&trans         &trans         &trans        &trans          &trans          &trans                          &trans         &trans         &trans        &trans          &trans          &trans
&trans         &trans         &trans        &trans          &trans          &trans                          &trans         &trans         &trans        &trans          &trans          &trans
&trans         &trans         &trans        &lt 6 INT_HENKAN    &lt 2 SPACE   &lt 4 INT_MUHENKAN             &trans        &trans                                                       &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp F1     &kp F2    &kp F3    &kp F4     &kp F5                                                         &kp F6   &kp F7  &kp F8  &kp F9  &kp F10
&kp F11    &kp F12   &kp DOWN_ARROW  &kp RIGHT_ARROW   &kp END  &trans                               &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp LG(LS(LEFT_ARROW))  &trans   &kp LG(LS(RIGHT_ARROW))  &trans   &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans  &trans  &lt 3 INT_HENKAN  &lt 6 SPACE   &lt 5 INT_MUHENKAN                          &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4
&trans  &trans  &trans  &trans  &trans  &trans                                 &bootloader  &trans         &trans         &trans         &trans         &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans                              &trans         &trans                                                      &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                   &kp MINUS  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS  
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp SLASH  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK
&trans  &trans  &trans  &trans  &trans  &trans    &mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans                                                                       &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
